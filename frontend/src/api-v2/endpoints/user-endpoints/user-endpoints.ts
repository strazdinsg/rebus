/**
 * Generated by orval
 * Do not edit manually.
 * rebus-backend
 */
import type {
  HttpResponseDtoString,
  HttpResponseDtoTeamAnswerDto,
  SimpleAnswerDto,
} from "../../models";
import { apiV2AxiosClient } from "../../apiClient";

export const getUserEndpoints = () => {
  /**
   * Get all answers for the current user, long version. Accessible by users only.
   */
  const getMyAnswers = () => {
    return apiV2AxiosClient<HttpResponseDtoTeamAnswerDto>({
      url: `/answers/my`,
      method: "GET",
    });
  };
  const postAnswer = (
    challengeId: number,
    userId: number,
    simpleAnswerDto: SimpleAnswerDto
  ) => {
    return apiV2AxiosClient<HttpResponseDtoString>({
      url: `/answers/${challengeId}/${userId}`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: simpleAnswerDto,
    });
  };
  return { getMyAnswers, postAnswer };
};
export type GetMyAnswersResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserEndpoints>["getMyAnswers"]>>
>;
export type PostAnswerResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserEndpoints>["postAnswer"]>>
>;
