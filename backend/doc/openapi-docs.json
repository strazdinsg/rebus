{
  "openapi": "3.0.1",
  "info": { "title": "Rebus backend", "version": "2.0.0" },
  "servers": [
    { "url": "http://localhost:8080", "description": "Generated server url" }
  ],
  "security": [{ "bearer-key": [] }],
  "paths": {
    "/score/{challengeId}/{userId}": {
      "post": {
        "tags": ["Admin endpoints"],
        "summary": "Set score for a specific team, specific challenge",
        "operationId": "setScore",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SingleScoreDto" }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden, no access",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Must log in as admin",
                    "data": ""
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK, score set",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoString"
                }
              }
            }
          }
        }
      }
    },
    "/pictures/{challengeId}/{userId}": {
      "get": {
        "tags": ["User endpoints"],
        "summary": "Get image submitted as an answer to a challenge by a team",
        "operationId": "getPicture",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK, image content in the body",
            "content": {
              "application/octet-stream": {
                "schema": { "type": "string", "format": "byte" }
              }
            }
          },
          "403": {
            "description": "Forbidden, not allowed to access images of other teams",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoString"
                }
              }
            }
          },
          "404": {
            "description": "Not found, image not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoString"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User endpoints"],
        "summary": "Upload an image to the server",
        "operationId": "uploadPicture",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["fileContent"],
                "type": "object",
                "properties": {
                  "fileContent": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK, Image ID in the body",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "SUCCESS",
                    "message": "",
                    "data": "123"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, not allowed to upload images for other teams",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Not allowed to upload images for other teams",
                    "data": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, something went wrong with storing the image",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Could not store image",
                    "data": ""
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User endpoints"],
        "summary": "Delete an image submitted as an answer to a challenge by a team",
        "operationId": "deletePicture",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "404": {
            "description": "Not found, Image not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Image not found",
                    "data": ""
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK, image deleted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": { "status": "SUCCESS", "message": "", "data": "" }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, not allowed to access images of other teams",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Not allowed to access images of other teams",
                    "data": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "tags": ["Public endpoints"],
        "summary": "Log in",
        "description": "Log in with a PIN code. The PIN code is unique for each team.",
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthenticationRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized, invalid PIN, null data",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Invalid PIN",
                    "data": null
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK, Authentication response as data",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoAuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/answers/{challengeId}/{userId}": {
      "post": {
        "tags": ["User endpoints"],
        "summary": "Post an answer to a challenge",
        "operationId": "postAnswer",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MyAnswerDto" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK, answer posted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "SUCCESS",
                    "message": "Answer posted",
                    "data": ""
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Error message",
                    "data": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "tags": ["Admin endpoints"],
        "summary": "Get all teams",
        "operationId": "getAllTeams",
        "responses": {
          "200": {
            "description": "OK, list of all teams",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoListTeamDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, no access to team listing",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Must log in as admin",
                    "data": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/challenges": {
      "get": {
        "tags": ["Public endpoints"],
        "summary": "Get all challenges",
        "operationId": "getAllChallenges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoListChallengeDto"
                }
              }
            }
          }
        }
      }
    },
    "/answers": {
      "get": {
        "tags": ["Admin endpoints"],
        "summary": "Get all answers",
        "operationId": "getAllAnswers",
        "responses": {
          "403": {
            "description": "Forbidden, no access to answer listing",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Must log in as admin",
                    "data": ""
                  }
                }
              }
            }
          },
          "200": {
            "description": "OK, list of all answers",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoListShortTeamAnswerDto"
                }
              }
            }
          }
        }
      }
    },
    "/answers/my": {
      "get": {
        "tags": ["User endpoints"],
        "summary": "Get answers of the currently logged-in user",
        "operationId": "getMyAnswers",
        "responses": {
          "200": {
            "description": "OK, answers of the currently logged-in user",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDtoTeamAnswerDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, must log in",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "example": {
                    "status": "ERROR",
                    "message": "Must log in",
                    "data": ""
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SingleScoreDto": {
        "type": "object",
        "properties": { "score": { "type": "integer", "format": "int32" } }
      },
      "HttpResponseDtoString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status: success or error",
            "enum": ["SUCCESS", "ERROR"]
          },
          "data": {
            "type": "string",
            "description": "The data that the server will send in the response, can be null"
          },
          "message": {
            "type": "string",
            "description": "A message explaining the response, in case of errors"
          }
        },
        "description": "Response from the server"
      },
      "AuthenticationRequest": {
        "type": "object",
        "properties": {
          "pin": {
            "type": "string",
            "description": "The PIN code of the user (team)"
          }
        },
        "description": "Data that the user sends in the login request"
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "jwt": { "type": "string", "description": "JWT token" }
        },
        "description": "Response of a successful authentication"
      },
      "HttpResponseDtoAuthenticationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status: success or error",
            "enum": ["SUCCESS", "ERROR"]
          },
          "data": { "$ref": "#/components/schemas/AuthenticationResponse" },
          "message": {
            "type": "string",
            "description": "A message explaining the response, in case of errors"
          }
        },
        "description": "Response from the server"
      },
      "MyAnswerDto": {
        "type": "object",
        "properties": {
          "challengeId": {
            "type": "integer",
            "description": "ID of the challenge",
            "format": "int32",
            "example": 123
          },
          "answer": {
            "type": "string",
            "description": "The answer text",
            "example": "Hello World"
          }
        },
        "description": "Our team's answer for one specific challenge"
      },
      "HttpResponseDtoListTeamDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status: success or error",
            "enum": ["SUCCESS", "ERROR"]
          },
          "data": {
            "type": "array",
            "description": "The data that the server will send in the response, can be null",
            "items": { "$ref": "#/components/schemas/TeamDto" }
          },
          "message": {
            "type": "string",
            "description": "A message explaining the response, in case of errors"
          }
        },
        "description": "Response from the server"
      },
      "TeamDto": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "name": { "type": "string" }
        },
        "description": "The data that the server will send in the response, can be null"
      },
      "ChallengeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the challenge",
            "format": "int32",
            "example": 1
          },
          "question": {
            "type": "string",
            "description": "The question of the challenge",
            "example": "What is the capital of France?"
          },
          "maxScore": {
            "type": "integer",
            "description": "Max score for this challenge",
            "format": "int32",
            "example": 100
          }
        },
        "description": "Challenge data"
      },
      "HttpResponseDtoListChallengeDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status: success or error",
            "enum": ["SUCCESS", "ERROR"]
          },
          "data": {
            "type": "array",
            "description": "The data that the server will send in the response, can be null",
            "items": { "$ref": "#/components/schemas/ChallengeDto" }
          },
          "message": {
            "type": "string",
            "description": "A message explaining the response, in case of errors"
          }
        },
        "description": "Response from the server"
      },
      "HttpResponseDtoListShortTeamAnswerDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status: success or error",
            "enum": ["SUCCESS", "ERROR"]
          },
          "data": {
            "type": "array",
            "description": "The data that the server will send in the response, can be null",
            "items": { "$ref": "#/components/schemas/ShortTeamAnswerDto" }
          },
          "message": {
            "type": "string",
            "description": "A message explaining the response, in case of errors"
          }
        },
        "description": "Response from the server"
      },
      "ShortTeamAnswerDto": {
        "type": "object",
        "properties": {
          "teamId": { "type": "integer", "format": "int32" },
          "answers": { "type": "array", "items": { "type": "string" } },
          "scores": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          }
        },
        "description": "The data that the server will send in the response, can be null"
      },
      "AnswerDto": {
        "type": "object",
        "properties": {
          "challengeId": {
            "type": "integer",
            "description": "ID of the challenge",
            "format": "int32",
            "example": 123
          },
          "answer": {
            "type": "string",
            "description": "The answer text",
            "example": "Hello World"
          },
          "score": {
            "type": "integer",
            "description": "Score given by the grader",
            "format": "int32",
            "example": 10
          }
        },
        "description": "Answer for one specific challenge (one specific team)"
      },
      "HttpResponseDtoTeamAnswerDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status: success or error",
            "enum": ["SUCCESS", "ERROR"]
          },
          "data": { "$ref": "#/components/schemas/TeamAnswerDto" },
          "message": {
            "type": "string",
            "description": "A message explaining the response, in case of errors"
          }
        },
        "description": "Response from the server"
      },
      "TeamAnswerDto": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "ID of the team",
            "format": "int32",
            "example": 1
          },
          "answers": {
            "type": "array",
            "description": "List of answers to all challenges for the team",
            "items": { "$ref": "#/components/schemas/AnswerDto" }
          }
        },
        "description": "Answers to all challenges for a particular team"
      }
    },
    "securitySchemes": {
      "bearer-key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
