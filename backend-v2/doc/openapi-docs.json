{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ChallengeDto": {
				"properties": {
					"maxScore": {
						"type": "number",
						"format": "double"
					},
					"question": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"maxScore",
					"question",
					"id"
				],
				"type": "object",
				"description": "Challenge DTO."
			},
			"HttpResponseDto_ChallengeDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ChallengeDto"
						},
						"type": "array"
					},
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR"
						]
					}
				},
				"required": [
					"message",
					"data",
					"status"
				],
				"type": "object",
				"description": "Generic HTTP response body."
			},
			"ChallengeResponseDto": {
				"$ref": "#/components/schemas/HttpResponseDto_ChallengeDto-Array_"
			},
			"ErrorResponseDto": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"ERROR"
						],
						"nullable": false
					}
				},
				"required": [
					"data",
					"message",
					"status"
				],
				"type": "object"
			},
			"AnswerDto": {
				"properties": {
					"imageUrl": {
						"type": "string",
						"nullable": true
					},
					"score": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"answer": {
						"type": "string",
						"nullable": true
					},
					"challengeId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"imageUrl",
					"score",
					"answer",
					"challengeId"
				],
				"type": "object",
				"description": "Answer DTO."
			},
			"TeamAnswerDto": {
				"properties": {
					"answers": {
						"items": {
							"$ref": "#/components/schemas/AnswerDto"
						},
						"type": "array"
					},
					"teamId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"answers",
					"teamId"
				],
				"type": "object",
				"description": "Team answer DTO."
			},
			"HttpResponseDto_TeamAnswerDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/TeamAnswerDto"
						},
						"type": "array"
					},
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR"
						]
					}
				},
				"required": [
					"message",
					"data",
					"status"
				],
				"type": "object",
				"description": "Generic HTTP response body."
			},
			"TeamListAnswerResponseDto": {
				"$ref": "#/components/schemas/HttpResponseDto_TeamAnswerDto-Array_",
				"description": "Answers for all teams."
			},
			"HttpResponseDto_TeamAnswerDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TeamAnswerDto"
					},
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR"
						]
					}
				},
				"required": [
					"message",
					"data",
					"status"
				],
				"type": "object",
				"description": "Generic HTTP response body."
			},
			"TeamAnswerResponseDto": {
				"$ref": "#/components/schemas/HttpResponseDto_TeamAnswerDto_",
				"description": "Answers for one team."
			},
			"HttpResponseDto_string_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"SUCCESS",
							"ERROR"
						]
					}
				},
				"required": [
					"message",
					"data",
					"status"
				],
				"type": "object",
				"description": "Generic HTTP response body."
			},
			"SimpleAnswerDto": {
				"properties": {
					"answer": {
						"type": "string"
					}
				},
				"required": [
					"answer"
				],
				"type": "object",
				"description": "A single answer to a challenge, by a single team."
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "jwt",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "rebus-backend",
		"version": "3.0.0",
		"description": "Backend for the Rebus application, in Node.js",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Girts Strazdins"
		}
	},
	"paths": {
		"/challenges": {
			"get": {
				"operationId": "GetChallenges",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChallengeResponseDto"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDto"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Public endpoints"
				],
				"security": [],
				"parameters": []
			}
		},
		"/answers": {
			"get": {
				"operationId": "GetAllAnswers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TeamListAnswerResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized (only accessible by admins)",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDto"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"description": "Get all answers for all teams. Accessible by admins only.",
				"tags": [
					"Admin endpoints"
				],
				"security": [
					{
						"jwt": [
							"ROLE_ADMIN"
						]
					}
				],
				"parameters": []
			}
		},
		"/answers/my": {
			"get": {
				"operationId": "GetMyAnswers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TeamAnswerResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized (only accessible by users)",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDto"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"description": "Get all answers for the current user, long version. Accessible by users only.",
				"tags": [
					"User endpoints"
				],
				"security": [
					{
						"jwt": [
							"ROLE_USER"
						]
					}
				],
				"parameters": []
			}
		},
		"/answers/{challengeId}/{userId}": {
			"post": {
				"operationId": "PostAnswer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HttpResponseDto_string_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized (only accessible by users)",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDto"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"403": {
						"description": "Can't access the answer",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDto"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User endpoints"
				],
				"security": [
					{
						"jwt": [
							"ROLE_USER"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "challengeId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SimpleAnswerDto"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}